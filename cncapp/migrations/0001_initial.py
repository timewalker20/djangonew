# Generated by Django 3.2.9 on 2022-08-07 12:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('is_hospital', models.BooleanField(default=False)),
                ('is_pharmacist', models.BooleanField(default=False)),
                ('is_driver', models.BooleanField(default=False)),
                ('is_ambulance', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BloodGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bloodgroup', models.CharField(choices=[('A+', 'A POSITIVE'), ('AB+', 'AB POSITIVE'), ('O+', 'O POSITIVE'), ('B-', 'B NEGATIVE'), ('A-', 'A NEGATIVE'), ('B+', 'B POSITIVE'), ('AB-', 'AB NEGATIVE'), ('O-', 'O NEGATIVE')], default='B+', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='f', max_length=300)),
                ('last_name', models.CharField(default='l', max_length=300)),
                ('email', models.EmailField(max_length=300, unique=True)),
                ('contactno', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('pincode', models.IntegerField(default=0, unique=True, validators=[django.core.validators.MaxValueValidator(6)])),
                ('experience', models.CharField(max_length=400)),
                ('speciality', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], default='M', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospitalname', models.CharField(max_length=100, unique=True)),
                ('contact_number', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(10)])),
                ('pincode', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(6)])),
                ('administratorname', models.CharField(max_length=100, unique=True)),
                ('facilities', models.TextField(max_length=400, null=True)),
                ('ratings', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=200, unique=True)),
                ('shop_address', models.TextField(max_length=400, unique=True)),
                ('phar_name', models.CharField(max_length=200)),
                ('email_pharm', models.EmailField(max_length=254)),
                ('contact_no', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(10)])),
                ('pincode', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(6)])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='f', max_length=300)),
                ('last_name', models.CharField(default='l', max_length=300)),
                ('email', models.EmailField(max_length=300, unique=True)),
                ('contactno', models.IntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(10)])),
                ('pincode', models.IntegerField(default=0, unique=True, validators=[django.core.validators.MaxValueValidator(6)])),
                ('disease', models.TextField(max_length=300)),
                ('aadhaarno', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(12)])),
                ('emergency', models.TextField(max_length=400, null=True)),
                ('bloodgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cncapp.bloodgroup')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cncapp.gender')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicinename', models.CharField(max_length=200)),
                ('price', models.FloatField(null=True)),
                ('mfg_date', models.DateField(null=True)),
                ('exp_date', models.DateField(null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalDoctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctorname', models.CharField(max_length=100)),
                ('speciality', models.CharField(max_length=200)),
                ('experience', models.CharField(max_length=200)),
                ('doctorintroduction', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('doctors', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cncapp.hospitaldoctor')),
                ('hospitals', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cncapp.hospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cncapp.patient')),
            ],
        ),
        migrations.AddField(
            model_name='hospital',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cncapp.hospitaldoctor'),
        ),
        migrations.AddField(
            model_name='hospital',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=300, unique=True)),
                ('contact_no', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(10)])),
                ('aadhaarno', models.IntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(12)])),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorAppoinment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Start time')),
                ('end_time', models.TimeField(verbose_name='End time')),
                ('date', models.DateField(verbose_name='Date')),
                ('emergency', models.TextField(max_length=400, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cncapp.doctor')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cncapp.patient')),
            ],
        ),
        migrations.AddField(
            model_name='doctor',
            name='gender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cncapp.gender'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Ambulance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleno', models.CharField(max_length=10, null=True, unique=True)),
                ('areacode', models.IntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(6)])),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cncapp.driver')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
